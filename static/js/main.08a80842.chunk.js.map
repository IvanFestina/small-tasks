{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/MyRoutes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Message","props","className","s","chat","alt","src","avatar","message","name","text","time","messageData","HW1","Affair","list","onClick","deleteAffairCallback","affair","_id","priority","red","orange","green","black","Affairs","mappedAffairs","data","map","a","setFilter","filter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","e","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","length","inputError","input","form","value","onChange","onKeyPress","event","key","label","button","GreetingContainer","users","addUserCallback","setName","setError","currentTarget","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","finalClassName","redButton","disabled","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","console","log","showAlert","setChecked","column","blue","PreJunior","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","Junior","JuniorPlus","Error404","container","PATH","MyRoutes","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.08a80842.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Affairs_list__2i-cH\",\"name\":\"Affairs_name__6mDJn\",\"priority\":\"Affairs_priority__3EcN8\",\"red\":\"Affairs_red__31jyc\",\"orange\":\"Affairs_orange__3ERcN\",\"green\":\"Affairs_green__2VRFG\",\"black\":\"Affairs_black__31wne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3tMG3\",\"error\":\"Greeting_error__3xMhC\",\"form\":\"Greeting_form__vy1hB\",\"input\":\"Greeting_input__38lOA\",\"inputError\":\"Greeting_inputError__GbXMw\",\"label\":\"Greeting_label__33ghM\",\"button\":\"Greeting_button__3vIC1\",\"totalUsers\":\"Greeting_totalUsers__3BM27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Message_chat__NmLeE\",\"message\":\"Message_message__3P3iN\",\"name\":\"Message_name__1w1-n\",\"text\":\"Message_text__7CsM-\",\"time\":\"Message_time__1t7dH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__20SFa\",\"errorInput\":\"SuperInputText_errorInput__1djqe\",\"error\":\"SuperInputText_error__1TeS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__11Yxr\",\"redButton\":\"SuperButton_redButton__7H8au\",\"disabled\":\"SuperButton_disabled__1TdPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3nqQr\",\"column\":\"HW4_column__1VxRQ\",\"testSpanError\":\"HW4_testSpanError__-Lf_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__1h8vL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__13N2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__3AOeR\"};","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={'/pre-junior'}>Pre-Junior</NavLink>\r\n            <NavLink to={'/junior'}>Junior</NavLink>\r\n            <NavLink to={'/junior-plus'}>Junior-Plus</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n    return (\r\n        <div className={s.chat}>\r\n            <img alt={'avatar'} src={props.avatar}/>\r\n\r\n            <div className={s.message}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'Age age age agedfgli dfffffffffff fffffddddddddd ddddddddddd dddd',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    const priorityColor = () => {\r\n        if (props.affair.priority === 'high') {\r\n            return s.red\r\n        } else if (props.affair.priority === 'middle') {\r\n            return s.orange\r\n        } else if (props.affair.priority === 'low') {\r\n            return s.green\r\n        } else {\r\n            return s.black\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.list}>\r\n            <button onClick={deleteCallback}>X</button>\r\n            <span className={s.name}>\r\n                {props.affair.name}\r\n            </span>\r\n            <span className={priorityColor()}>\r\n                {props.affair.priority}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair","import React from 'react'\r\nimport Affair from './Affair'\r\nimport s from './Affairs.module.css'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = {\r\n    filter: FilterType\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all')\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button className={props.filter === 'high' ? s.red : s.black} onClick={setHigh}>High</button>\r\n            <button className={props.filter === 'middle' ? s.orange : s.black} onClick={setMiddle}>Middle</button>\r\n            <button className={props.filter === 'low' ? s.green : s.black} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs\r\n    if (filter === 'high') return affairs.filter(e => e.priority === 'high')\r\n    if (filter === 'middle') return affairs.filter(e => e.priority === 'middle')\r\n    if (filter === 'low') return affairs.filter(e => e.priority === 'low')\r\n    else return affairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    return affairs.filter(e => e._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                filter={filter}\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            addUser()\r\n        }\r\n    }\r\n    const inputClass = error.length > 0 ? s.inputError  : s.input;\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.form}>\r\n                <input className={inputClass} value={name} onChange={setNameCallback} onKeyPress={onKeyPressHandler}/>\r\n                <label className={s.label}>Name</label>\r\n                <button className={s.button} onClick={addUser}>+</button>\r\n                <div className={s.error}>{error}</div>\r\n            </div>\r\n            <div className={s.totalUsers}>{totalUsers}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        if (name !== \"\") {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name}! `)\r\n            setName('')\r\n            setError('')\r\n        } else {\r\n            setError(\"Type something\")\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n    const user = {_id: v1(), name: name}\r\n        setUsers([...users, user])\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    // console.log(error)\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = error ? s.errorInput : s.superInput // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName }\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = red ? s.redButton : restProps.disabled ? s.disabled : s.default\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n\r\n    const error = text ?   '' : 'Type something'\r\n    console.log(text)\r\n    console.log(error)\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        // setValue()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\n\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from 'react'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.container}>\r\n            <h1>404</h1>\r\n            <h2>Page Not Found</h2>\r\n            <p>The Page you are looking for doesn't exist or an other error occured.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport Error404 from \"./pages/Error404\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n    ERROR404: '/*'\r\n}\r\n\r\nfunction MyRoutes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Routes>\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} element={() => <Navigate to={PATH.PRE_JUNIOR}/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                <Route path={PATH.ERROR404} element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyRoutes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport MyRoutes from './MyRoutes'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n\r\n            <Header/>\r\n\r\n            <MyRoutes/>\r\n\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>HW</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5 />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}